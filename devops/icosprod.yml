# This ansible playbook will provision our production servers.

- import_playbook: setup.yml

- hosts: icosprod icosprod2
  become: true
  vars_files:
    - vault.yml
    - vars.yml
  roles:
    - role: icos.linux
      tags: linux
    - role: icos.docker
      tags: docker
    - role: icos.nginx
      tags: nginx
    - role: icos.java
      tags: java

- hosts: icosprod
  become: true
  vars_files:
    - vault.yml
    - vars.yml
  roles:
    - role: icos.restheart
      tags: restheart
    - role: icos.cpauth
      tags: cpauth
    - role: icos.cpdata
      tags: cpdata
    - role: icos.doi
      tags: doi
    - role: icos.filedrop
      tags: filedrop
    - role: icos.kanboard
      tags: kanboard
    - role: icos.drupal
      tags: drupal
    - role: icos.mattermost
      tags: mattermost
    - role: icos.sitesaquanetform
      tags: sitesaquanetform
    - role: icos.ssh_incoming_tunnel
      tags: ssh_incoming_tunnel
      vars:
        user: tunnel_icosprod2_meta
        remote_host: "{{ meta_tunnel_from_ip }}"
        public_key: >-
          "{{ lookup('file', 'roles/icos.ssh_outgoing_tunnel/files/ssh_tunnel.pub') }}"
    - { role: icos.pgrep,
        tags: pgrep,
        arg: "{{ pgrep_rdflog_instance }}" }

- hosts: icosprod2
  become: true
  vars_files:
    - vault.yml
    - vars.yml
  roles:
    - role: icos.geoip
      tags: geoip
    - role: icos.rdflog
      tags: rdflog
    - role: icos.cpmeta
      tags: cpmeta
    - role: icos.remotebackup
      tags: remotebackup
    - role: icos.ssh_outgoing_tunnel
      tags: ssh_outgoing_tunnel
      vars:
        remote_host: icosprod
        remote_host_key: >-
          "{{ hostvars[meta_tunnel_to_host].ansible_ssh_host_key_ecdsa_public }}"
        remote_acct: tunnel_icosprod2_meta
        remote_ip: "{{ meta_tunnel_to_ip }}"
        remote_name: meta
        tunnel_args: "-R localhost:{{ meta_port }}:localhost:{{ meta_port }}"
