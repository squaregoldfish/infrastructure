diff -cr flexpart10.2/src/ecmwf_mod.f90 disk-data-flexpart-10.2-src/ecmwf_mod.f90
*** flexpart10.2/src/ecmwf_mod.f90	2017-07-20 16:11:09.000000000 +0200
--- disk-data-flexpart-10.2-src/ecmwf_mod.f90	2018-09-03 11:51:18.306709919 +0200
***************
*** 44,50 ****
  !  integer,parameter :: nxmax=361,nymax=181,nuvzmax=92,nwzmax=92,nzmax=92 !ECMWF new 
     integer,parameter :: nxmax=361,nymax=181,nuvzmax=138,nwzmax=138,nzmax=138 !ECMWF new 
  !  integer,parameter :: nxmax=721,nymax=361,nuvzmax=138,nwzmax=138,nzmax=138 !ECMWF new 0.5 
!    integer,parameter :: nxshift=359
  !  integer,parameter :: nxshift=718
  !  integer,parameter :: nxshift=0
  
--- 44,50 ----
  !  integer,parameter :: nxmax=361,nymax=181,nuvzmax=92,nwzmax=92,nzmax=92 !ECMWF new 
     integer,parameter :: nxmax=361,nymax=181,nuvzmax=138,nwzmax=138,nzmax=138 !ECMWF new 
  !  integer,parameter :: nxmax=721,nymax=361,nuvzmax=138,nwzmax=138,nzmax=138 !ECMWF new 0.5 
!    integer,parameter :: nxshift=0
  !  integer,parameter :: nxshift=718
  !  integer,parameter :: nxshift=0
  
diff -cr flexpart10.2/src/makefile disk-data-flexpart-10.2-src/makefile
*** flexpart10.2/src/makefile	2017-07-20 16:11:30.000000000 +0200
--- disk-data-flexpart-10.2-src/makefile	2018-09-03 11:51:18.796723420 +0200
***************
*** 39,62 ****
  
  ifeq ($(gcc), 4.9)
  # Compiled libraries under users ~flexpart, gfortran v4.9
! 	ROOT_DIR = /homevip/flexpart/
  #	ROOT_DIR = /homevip/espen/
  
  	F90	  = ${ROOT_DIR}/gcc-4.9.1/bin/gfortran
! 	MPIF90    = ${ROOT_DIR}/bin/mpifort
  
  	INCPATH1  = ${ROOT_DIR}/gcc-4.9.1/include	
! 	INCPATH2  = ${ROOT_DIR}/include
! 	LIBPATH1 = ${ROOT_DIR}/lib
  
  else
  # Default: System libraries at NILU, gfortran v4.6
  	F90       = /usr/bin/gfortran
! 	MPIF90    = /usr/bin/mpif90.openmpi
  
! 	INCPATH1 = /xnilu_wrk/flex_wrk/bin64/grib_api/include
! 	INCPATH2 = /usr/include
! 	LIBPATH1 = /xnilu_wrk/flex_wrk/bin64/grib_api/lib
  endif
  
  
--- 39,62 ----
  
  ifeq ($(gcc), 4.9)
  # Compiled libraries under users ~flexpart, gfortran v4.9
! 	ROOT_DIR = /disk/data/flexpart/bin/
  #	ROOT_DIR = /homevip/espen/
  
  	F90	  = ${ROOT_DIR}/gcc-4.9.1/bin/gfortran
! 	MPIF90    = /usr/lib64/openmpi/bin/mpifort
  
  	INCPATH1  = ${ROOT_DIR}/gcc-4.9.1/include	
! 	INCPATH2  = /usr/local/include
! 	LIBPATH1 = /usr/local/lib
  
  else
  # Default: System libraries at NILU, gfortran v4.6
  	F90       = /usr/bin/gfortran
! 	MPIF90    = /usr/lib64/openmpi/bin/mpif90
  
! 	INCPATH1 = /usr/include
! 	INCPATH2 = /usr/local/include
! 	LIBPATH1 = /usr/local/lib
  endif
  
  
diff -cr flexpart10.2/src/netcdf_output_mod.f90 disk-data-flexpart-10.2-src/netcdf_output_mod.f90
*** flexpart10.2/src/netcdf_output_mod.f90	2017-07-20 16:11:16.000000000 +0200
--- disk-data-flexpart-10.2-src/netcdf_output_mod.f90	2018-09-03 11:51:18.518715760 +0200
***************
*** 42,47 ****
--- 42,50 ----
    !    'dep_prec' in par_mod
    !  - Hardcoded options 'write_vol' and 'write_area' for grid cell
    !    volume and area
+   !  
+   ! AV 2018
+   !  - Modification for cf convention, time first, 5 dimensional data
    !*****************************************************************************
  
  
***************
*** 62,68 ****
                         outlon0n,outlat0n,dxoutn,dyoutn,numxgridn,numygridn, &
                         nspec,maxpointspec_act,species,numpoint,&
                         dx,xlon0,dy,ylat0,compoint,method,lsubgrid,lconvection,&
!                        ind_source,ind_receptor,nageclass,lage,&
                         drydep,wetdep,decay,weta_gas,wetb_gas, numbnests, &
                         ccn_aero,in_aero, & ! wetc_in,wetd_in, &
                         reldiff,henry,f0,density,dquer,dsigma,dryvel,&
--- 65,71 ----
                         outlon0n,outlat0n,dxoutn,dyoutn,numxgridn,numygridn, &
                         nspec,maxpointspec_act,species,numpoint,&
                         dx,xlon0,dy,ylat0,compoint,method,lsubgrid,lconvection,&
!                        ind_source,ind_receptor,nageclass,lage,hmix,&
                         drydep,wetdep,decay,weta_gas,wetb_gas, numbnests, &
                         ccn_aero,in_aero, & ! wetc_in,wetd_in, &
                         reldiff,henry,f0,density,dquer,dsigma,dryvel,&
***************
*** 75,81 ****
                         itsplit, lsynctime, ctl, ifine, lagespectra, ipin, &
                         ioutputforeachrelease, iflux, mdomainfill, mquasilag, & 
                         nested_output, ipout, surf_only, linit_cond, &
!                        flexversion,mpi_mode
  
    use mean_mod
  
--- 78,84 ----
                         itsplit, lsynctime, ctl, ifine, lagespectra, ipin, &
                         ioutputforeachrelease, iflux, mdomainfill, mquasilag, & 
                         nested_output, ipout, surf_only, linit_cond, &
!                        flexversion,mpi_mode,memtime
  
    use mean_mod
  
***************
*** 91,97 ****
    ! parameter for data compression (1-9, 9 = most aggressive)
    integer, parameter :: deflate_level = 9
    logical, parameter :: min_size = .false.   ! if set true, redundant fields (topography) are not written to minimize file size
!   character(len=255), parameter :: institution = 'NILU'
  
    integer            :: tpointer
    character(len=255) :: ncfname, ncfnamen
--- 94,100 ----
    ! parameter for data compression (1-9, 9 = most aggressive)
    integer, parameter :: deflate_level = 9
    logical, parameter :: min_size = .false.   ! if set true, redundant fields (topography) are not written to minimize file size
!   character(len=255), parameter :: institution = 'ICOS_CP'
  
    integer            :: tpointer
    character(len=255) :: ncfname, ncfnamen
***************
*** 100,106 ****
    integer, dimension(maxspec) :: specID,specIDppt, wdspecID,ddspecID
    integer, dimension(maxspec) :: specIDn,specIDnppt, wdspecIDn,ddspecIDn
    integer                     :: timeID, timeIDn
!   integer, dimension(6)       :: dimids, dimidsn
    integer, dimension(5)       :: depdimids, depdimidsn
    real,parameter :: eps=nxmax/3.e5
  
--- 103,109 ----
    integer, dimension(maxspec) :: specID,specIDppt, wdspecID,ddspecID
    integer, dimension(maxspec) :: specIDn,specIDnppt, wdspecIDn,ddspecIDn
    integer                     :: timeID, timeIDn
!   integer, dimension(5)       :: dimids, dimidsn
    integer, dimension(5)       :: depdimids, depdimidsn
    real,parameter :: eps=nxmax/3.e5
  
***************
*** 265,271 ****
    integer :: rellng1ID, rellng2ID, rellat1ID, rellat2ID, relzz1ID, relzz2ID
    integer :: relcomID, relkindzID, relstartID, relendID, relpartID, relxmassID
    integer :: nnx, nny 
!   integer, dimension(6)       :: dIDs
    integer, dimension(5)       :: depdIDs
    character(len=255)          :: fname
    character(len=15)           :: units
--- 268,274 ----
    integer :: rellng1ID, rellng2ID, rellat1ID, rellat2ID, relzz1ID, relzz2ID
    integer :: relcomID, relkindzID, relstartID, relendID, relpartID, relxmassID
    integer :: nnx, nny 
!   integer, dimension(5)       :: dIDs
    integer, dimension(5)       :: depdIDs
    character(len=255)          :: fname
    character(len=15)           :: units
***************
*** 275,281 ****
    real, dimension(1000)       :: coord
  
    integer                     :: cache_size
!   integer, dimension(6)       :: chunksizes
    integer, dimension(5)       :: dep_chunksizes
  
    integer                     :: i,ix,jy
--- 278,284 ----
    real, dimension(1000)       :: coord
  
    integer                     :: cache_size
!   integer, dimension(5)       :: chunksizes
    integer, dimension(5)       :: dep_chunksizes
  
    integer                     :: i,ix,jy
***************
*** 478,484 ****
    ! concentration output, wet and dry deposition variables (one per species)
    call output_units(units)
  
!   dIDs = (/ londimid, latdimid, levdimid, timedimid, pointspecdimid, nageclassdimid /)
    depdIDs = (/ londimid, latdimid, timedimid, pointspecdimid, nageclassdimid /)
    if (lnest) then
       dimidsn    = dIDs
--- 481,487 ----
    ! concentration output, wet and dry deposition variables (one per species)
    call output_units(units)
  
!   dIDs = (/ londimid, latdimid, levdimid, pointspecdimid, timedimid /)
    depdIDs = (/ londimid, latdimid, timedimid, pointspecdimid, nageclassdimid /)
    if (lnest) then
       dimidsn    = dIDs
***************
*** 490,496 ****
  
    ! set chunksizes according to largest written portion of data in an individual call to 
    ! nf90_put_var
!   chunksizes = (/ nnx, nny, numzgrid, 1, 1, 1 /)
    dep_chunksizes = (/ nnx, nny, 1, 1, 1 /)
  
    do i = 1,nspec
--- 493,499 ----
  
    ! set chunksizes according to largest written portion of data in an individual call to 
    ! nf90_put_var
!   chunksizes = (/ nnx, nny, numzgrid, 1, 1 /)
    dep_chunksizes = (/ nnx, nny, 1, 1, 1 /)
  
    do i = 1,nspec
***************
*** 755,764 ****
    real, intent(out)   :: gridtotalunc
    real                :: densityoutrecept(maxreceptor)
    integer             :: ncid,kp,ks,kz,ix,jy,iix,jjy,kzz,kzzm1,ngrid
!   integer             :: nage,i,l,jj
    real                :: tot_mu(maxspec,maxpointspec_act)
!   real                :: halfheight,dz,dz1,dz2
    real                :: xl,yl,xlrot,ylrot,zagnd,zagndprev
    real(dep_prec)      :: auxgrid(nclassunc)
    real(dep_prec)      :: gridtotal,gridsigmatotal
    real(dep_prec)      :: wetgridtotal,wetgridsigmatotal
--- 758,768 ----
    real, intent(out)   :: gridtotalunc
    real                :: densityoutrecept(maxreceptor)
    integer             :: ncid,kp,ks,kz,ix,jy,iix,jjy,kzz,kzzm1,ngrid
!   integer             :: nage,i,l,jj,k,mind
    real                :: tot_mu(maxspec,maxpointspec_act)
!   real                :: halfheight,dz,dz1,dz2,fak,hght,phght
    real                :: xl,yl,xlrot,ylrot,zagnd,zagndprev
+   real                :: mixingh,summix,dt1,dt2,dtt,h(2)
    real(dep_prec)      :: auxgrid(nclassunc)
    real(dep_prec)      :: gridtotal,gridsigmatotal
    real(dep_prec)      :: wetgridtotal,wetgridsigmatotal
***************
*** 903,910 ****
    do ks=1,nspec
  
      do kp=1,maxpointspec_act
!       do nage=1,nageclass
! 
          do jy=0,numygrid-1
            do ix=0,numxgrid-1
  
--- 907,914 ----
    do ks=1,nspec
  
      do kp=1,maxpointspec_act
! !      do nage=1,nageclass
!       nage=1
          do jy=0,numygrid-1
            do ix=0,numxgrid-1
  
***************
*** 957,972 ****
              endif
  
              ! CONCENTRATION OR MIXING RATIO
              do kz=1,numzgrid
                do l=1,nclassunc
                  auxgrid(l)=gridunc(ix,jy,kz,ks,kp,l,nage)
                end do
                call mean(auxgrid,grid(ix,jy,kz), &
                     gridsigma(ix,jy,kz),nclassunc)
                ! Multiply by number of classes to get total concentration
!               grid(ix,jy,kz)= &
!                    grid(ix,jy,kz)*real(nclassunc)
                gridtotal=gridtotal+grid(ix,jy,kz)
                ! Calculate standard deviation of the mean
                gridsigma(ix,jy,kz)= &
                     gridsigma(ix,jy,kz)* &
--- 961,1013 ----
              endif
  
              ! CONCENTRATION OR MIXING RATIO
+             
+             ! Boundary layer height is available on main domain for two timesteps
+             ! we need to find the right coordinate and interpolate in time
+             dt1=real(itime-memtime(1))      ! AV: interpolation in time for 
+             dt2=real(memtime(2)-itime)      ! BLH fields from main domain
+             dtt=1./(dt1+dt2)
+   
+             ! grid index in mother domain           
+             xl=outlon0+real(ix)*dxout       ! AV: calculate coordinates on main domain
+             yl=outlat0+real(jy)*dyout       ! of output grid points
+             xl=(xl-xlon0)/dx
+             yl=(yl-ylat0)/dx
+ 
+             do k=1,2 
+               mind=memind(k) ! eso: compatibility with 3-field version
+               ! obtain the BLH values from the two fields on main domain in memory  
+               h(k)=hmix(nint(xl),nint(yl),1,mind)
+             end do
+             ! interpolate in time
+             mixingh=(h(1)*dt2+h(2)*dt1)*dtt
+ 
+             summix=0
              do kz=1,numzgrid
+               if (kz.eq.1) then
+                 phght=0
+               else
+                 phght=outheight(kz-1)
+               endif
+               hght=outheight(kz)
+               if (mixingh.gt.hght) then
+                 fak=1
+               else
+                 if (mixingh.gt.phght) then
+                   fak=(mixingh-phght)/(hght-phght)  ! AV: oversimplified...
+                 else
+                   fak=0
+                 endif
+               endif
                do l=1,nclassunc
                  auxgrid(l)=gridunc(ix,jy,kz,ks,kp,l,nage)
                end do
                call mean(auxgrid,grid(ix,jy,kz), &
                     gridsigma(ix,jy,kz),nclassunc)
                ! Multiply by number of classes to get total concentration
!               grid(ix,jy,kz)=grid(ix,jy,kz)*real(nclassunc)
                gridtotal=gridtotal+grid(ix,jy,kz)
+               summix=summix+fak*grid(ix,jy,kz)
                ! Calculate standard deviation of the mean
                gridsigma(ix,jy,kz)= &
                     gridsigma(ix,jy,kz)* &
***************
*** 974,979 ****
--- 1015,1026 ----
                gridsigmatotal=gridsigmatotal+ &
                     gridsigma(ix,jy,kz)
              end do
+             
+             ! we put the footprint data for the particles in the boundary layer 
+             ! in the lowest layer and the boundary layer height in the highest
+             ! Ugly but it works
+             grid(ix,jy,1)=summix
+             grid(ix,jy,numzgrid)=mixingh
            end do
          end do
  
***************
*** 1008,1014 ****
            ! Concentrations
            call nf90_err(nf90_put_var(ncid,specID(ks),grid(0:numxgrid-1,0:numygrid-1,&
               1:numzgrid)*factor3d(0:numxgrid-1,0:numygrid-1,1:numzgrid)/tot_mu(ks,kp),&
!                (/ 1,1,1,tpointer,kp,nage /), (/ numxgrid,numygrid,numzgrid,1,1,1 /) ))
   
          endif !  concentration output
  
--- 1055,1061 ----
            ! Concentrations
            call nf90_err(nf90_put_var(ncid,specID(ks),grid(0:numxgrid-1,0:numygrid-1,&
               1:numzgrid)*factor3d(0:numxgrid-1,0:numygrid-1,1:numzgrid)/tot_mu(ks,kp),&
!                (/ 1,1,1,kp,tpointer /), (/ numxgrid,numygrid,numzgrid,1,1 /) ))
   
          endif !  concentration output
  
***************
*** 1037,1047 ****
                 grid(0:numxgrid-1,0:numygrid-1,1:numzgrid)*&
                 factor3d(0:numxgrid-1,0:numygrid-1,1:numzgrid)/&
                 densityoutgrid(0:numxgrid-1,0:numygrid-1,1:numzgrid),&
!                (/ 1,1,1,tpointer,kp,nage /), (/ numxgrid,numygrid,numzgrid,1,1,1 /)))
  
          endif ! output for ppt
  
!       end do
      end do
  
    end do
--- 1084,1094 ----
                 grid(0:numxgrid-1,0:numygrid-1,1:numzgrid)*&
                 factor3d(0:numxgrid-1,0:numygrid-1,1:numzgrid)/&
                 densityoutgrid(0:numxgrid-1,0:numygrid-1,1:numzgrid),&
!                (/ 1,1,1,kp,tpointer /), (/ numxgrid,numygrid,numzgrid,1,1 /)))
  
          endif ! output for ppt
  
!  !     end do
      end do
  
    end do
***************
*** 1276,1283 ****
    do ks=1,nspec
  
      do kp=1,maxpointspec_act
!       do nage=1,nageclass
! 
          do jy=0,numygridn-1
            do ix=0,numxgridn-1
              ! WET DEPOSITION
--- 1323,1330 ----
    do ks=1,nspec
  
      do kp=1,maxpointspec_act
! !      do nage=1,nageclass
!       nage=1
          do jy=0,numygridn-1
            do ix=0,numxgridn-1
              ! WET DEPOSITION
***************
*** 1372,1378 ****
            ! Concentrations
            call nf90_err(nf90_put_var(ncid,specIDn(ks),grid(0:numxgridn-1,0:numygridn-1,&
               1:numzgrid)*factor3d(0:numxgridn-1,0:numygridn-1,1:numzgrid)/tot_mu(ks,kp),&
!                (/ 1,1,1,tpointer,kp,nage /), (/ numxgridn,numygridn,numzgrid,1,1,1 /)))
   
          endif !  concentration output
  
--- 1419,1425 ----
            ! Concentrations
            call nf90_err(nf90_put_var(ncid,specIDn(ks),grid(0:numxgridn-1,0:numygridn-1,&
               1:numzgrid)*factor3d(0:numxgridn-1,0:numygridn-1,1:numzgrid)/tot_mu(ks,kp),&
!                (/ 1,1,1,kp,tpointer /), (/ numxgridn,numygridn,numzgrid,1,1 /)))
   
          endif !  concentration output
  
***************
*** 1400,1410 ****
                 grid(0:numxgridn-1,0:numygridn-1,1:numzgrid)*&
                 factor3d(0:numxgridn-1,0:numygridn-1,1:numzgrid)/&
                 densityoutgrid(0:numxgridn-1,0:numygridn-1,1:numzgrid),&
!                (/ 1,1,1,tpointer,kp,nage /), (/ numxgridn,numygridn,numzgrid,1,1,1 /)))
  
          endif ! output for ppt
  
!       end do
      end do
  
    end do
--- 1447,1457 ----
                 grid(0:numxgridn-1,0:numygridn-1,1:numzgrid)*&
                 factor3d(0:numxgridn-1,0:numygridn-1,1:numzgrid)/&
                 densityoutgrid(0:numxgridn-1,0:numygridn-1,1:numzgrid),&
!                (/ 1,1,1,kp,tpointer /), (/ numxgridn,numygridn,numzgrid,1,1 /)))
  
          endif ! output for ppt
  
!  !     end do
      end do
  
    end do
