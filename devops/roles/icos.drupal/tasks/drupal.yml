---
- name: Include {{ project_name }} vars
  include_vars: "{{ project_name }}-vars.yml"

- name: Include {{ project_name }} vault
  include_vars: "{{ project_name }}-vault.yml"

- name: Include vars
  include_vars: drupal.yml

- import_role: name=icos.certbot
  vars:
    - certbot_domains: "{{ certbot_domains }}"
    - certbot_conf_name: "{{ nginx_conf_name }}"
  when: project_name != "ns"

- name: Copy nginx {{ nginx_conf_name }}.conf
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/conf.d/{{ nginx_conf_name }}.conf
    mode: 0700
  notify: reload nginx config
  when: project_name != "ns"

- name: Create project directory
  file:
    path: "{{ project_dir }}"
    state: directory

- name: Pull source code from git
  git:
    repo: https://github.com/ICOS-Carbon-Portal/drupal
    version: "{{ git_version | default('master') }}"
    dest: "{{ project_dir }}"
    force: yes

- name: Restore file archives
  unarchive:
    src: "{{ backup_path }}/{{ project_name }}Drupal/files/{{ item }}.tar.gz"
    dest: "{{ project_dir }}/"
  with_items:
    - files_backup
    - modules_backup
    - themes_backup
  when: restore

- name: Create {{ project_dir }}/config/ directory
  file: path={{ project_dir }}/config/ state=directory recurse=yes

- name: Copy uploads config
  copy:
    src: uploads.ini
    dest: "{{ project_dir }}/config/uploads.ini"

- name: Create {{ project_dir }}/files/private/ directory
  file: path={{ project_dir }}/files/private/ state=directory recurse=yes

- name: Create {{ project_dir }}/files/default/files/ directory
  file: path={{ project_dir }}/files/default/files/ state=directory recurse=yes

- name: Copy settings.php
  template:
    src: settings.php.j2
    dest: "{{ project_dir }}/files/default/settings.php"

- name: Copy services.yml
  copy:
    src: services.yml
    dest: "{{ project_dir }}/files/default/"

- name: Copy modules library
  template:
    src: "{{ item }}.libraries.yml.j2"
    dest: "{{ project_dir }}/modules/{{ item }}/{{ item }}.libraries.yml"
  with_items:
    - cp_blogs
    - cp_cmis
    - cp_documents
    - cp_events
    - cp_files
  notify: reload nginx config

- name: Download cmis_repository_wrapper.php
  get_url:
    url: https://raw.githubusercontent.com/TIU11/Basic-CMIS/6ac8fe940b9ebfa2c9419124fa5552ef972020c8/lib/cmis_repository_wrapper.php
    dest: "{{ project_dir }}/modules/cp_cmis/src/CMIS/cmis_repository_wrapper.php"

- name: Copy theme library
  template:
    src: cp_theme_d8.libraries.yml.j2
    dest: "{{ project_dir }}/themes/cp_theme_d8/cp_theme_d8.libraries.yml"

- name: Ensure {{ project_dir }}/docker/ directory exists
  file: path={{ project_dir }}/docker/ state=directory recurse=yes

- name: Copy docker-compose.yml
  template:
    src: docker-compose.yml.j2
    dest: "{{ project_dir }}/docker/docker-compose.yml"

- name: Copy environment file
  template:
    src: env.j2
    dest: "{{ project_dir }}/docker/.env"

- name: Run docker-compose
  docker_service:
    project_src: "{{ project_dir }}/docker"
    state: present
    pull: yes
  notify: reload nginx config

- name: Change private directory owner
  command: docker exec {{project_name}}_drupal_1 chown -R www-data:www-data /var/www/private/

- name: Change files directory owner
  command: docker exec {{project_name}}_drupal_1 chown -R www-data:www-data /var/www/html/sites/default/files

- name: Restore database
  import_tasks: database.yml
  when: restore

- name: Setup backup script
  import_tasks: backup.yml
  when: project_name != "demo"
